#!/bin/sh
#
# Liverpool John Moores University
# org.estar.gcn.GCNDatagramScriptStarter startup script.
#
# chkconfig: 345 95 5
# description: org.estar.gcn.GCNDatagramScriptStarter startup script.
#ident	"$Id: gcnscriptstarter.grb,v 1.18 2012-10-10 13:46:34 cjm Exp $"
GCN_SCRIPT_STARTER_TMP_HOME=/grb/tmp/
GCN_SCRIPT_STARTER_SCRIPT_HOME=/grb/bin/tocs_commands
GCN_SCRIPT_STARTER_OUPTUT_FILE=/grb/tmp/gcn_script_starter_output.txt
GCN_SCRIPT_STARTER_USER=eng
# Note, probably doesn't work on ltccd1, --short does not work!
# Also HOSTTYPE not present in /etc/init.d scripts?
hostname=`/bin/hostname --short`
# Maximum length of time between the GRB being detected, and us receiving the packet
# and starting a followup in response. i.e. don't followup GRBs that take too long to reach us.
# in milliseconds: There are 3600000 ms/hr
GCN_SCRIPT_STARTER_MAX_PROPOGATION_DELAY="-max_propogation_delay 3600000"
#GCN_SCRIPT_STARTER_MAX_PROPOGATION_DELAY=""
# name of script to run. Will be run from $GCN_SCRIPT_STARTER_SCRIPT_HOME
GCN_SCRIPT_STARTER_SCRIPT="-script ${GCN_SCRIPT_STARTER_SCRIPT_HOME}/gamma_ray_burst_alert"
# misc command line arguments
case ${hostname} in
    ltproxy|mdt-test)
        # error box radius in arcseconds (150 = 2.5 arcmins)
        # NB 600 (10 arcmin radius)
	# 36000 = 10 degrees - used so FERMI LAT is followed up.
        GCN_SCRIPT_STARTER_MAX_ERROR_BOX="-max_error_box 36000"
        # SPACECRAFT_FILTER: -all, -agile -fermi -hete -integral -swift
	GCN_SCRIPT_STARTER_SPACECRAFT_FILTER="-fermi -hete -integral -swift"
	# reject Swift BAT alerts with bits 3, 5, 8 set (= 0x128).
	# 3 = flt_cat_src, 5 = def_not_grb, 7 = uncert_grb (low image significance), 8 = gnd_cat_src
	GCN_SCRIPT_STARTER_COMMAND_ARGS="-swift_soln_status_reject_mask 0x128 -swift_filter_on_merit"
	;;
    "ftnproxy")
        # error box radius in arcseconds (150 = 2.5 arcmins)
        # NB 600 (10 arcmin radius)
        GCN_SCRIPT_STARTER_MAX_ERROR_BOX="-max_error_box 600"
        # SPACECRAFT_FILTER: -all, -agile -fermi -hete -integral -swift
	GCN_SCRIPT_STARTER_SPACECRAFT_FILTER="-hete -integral -swift"
	# reject Swift BAT alerts with bits 3, 5, 8 set (= 0x128).
	# 3 = flt_cat_src, 5 = def_not_grb, 7 = uncert_grb (low image significance), 8 = gnd_cat_src
	GCN_SCRIPT_STARTER_COMMAND_ARGS="-swift_soln_status_reject_mask 0x128 -swift_filter_on_merit"
	;;
    "ftsproxy")
        # error box radius in arcseconds (150 = 2.5 arcmins)
        # NB 600 (10 arcmin radius)
        GCN_SCRIPT_STARTER_MAX_ERROR_BOX="-max_error_box 600"
        # SPACECRAFT_FILTER: -all, -agile -fermi -hete -integral -swift
	GCN_SCRIPT_STARTER_SPACECRAFT_FILTER="-hete -integral -swift"
	# reject Swift BAT alerts with bits 3, 5, 8 set (= 0x128).
	# 3 = flt_cat_src, 5 = def_not_grb, 7 = uncert_grb (low image significance), 8 = gnd_cat_src
	GCN_SCRIPT_STARTER_COMMAND_ARGS="-swift_soln_status_reject_mask 0x128 -swift_filter_on_merit"
	;;
    *)
	echo "Unknown hostname ${hostname}."
	exit 1
	;;
esac
# Some .sh equivalent stuff of environment in
# lt_environment.csh
CLASSPATH="."
list=`ls /grb/bin/javalib/*.jar`
for i in $list; do
    CLASSPATH=${CLASSPATH}":"$i
done

LD_LIBRARY_PATH=/grb/bin/lib/${HOSTTYPE}
export CLASSPATH 
export LD_LIBRARY_PATH

case "$1" in
start)
	su ${GCN_SCRIPT_STARTER_USER} -c "/bin/rm -f ${GCN_SCRIPT_STARTER_PIDFILE}"
	echo "GCN Script Starter start."
	# Logger logs to current dir - make it grb temp dir.
	cd ${GCN_SCRIPT_STARTER_TMP_HOME}
	# Note we now assume ${GCN_SCRIPT_STARTER_USER} (eng) is running tcsh, not bash
	su ${GCN_SCRIPT_STARTER_USER} -c "(java org.estar.gcn.GCNDatagramScriptStarter ${GCN_SCRIPT_STARTER_SPACECRAFT_FILTER} ${GCN_SCRIPT_STARTER_MAX_ERROR_BOX} ${GCN_SCRIPT_STARTER_MAX_PROPOGATION_DELAY} ${GCN_SCRIPT_STARTER_SCRIPT} ${GCN_SCRIPT_STARTER_COMMAND_ARGS} > ${GCN_SCRIPT_STARTER_OUPTUT_FILE}) >& ${GCN_SCRIPT_STARTER_OUPTUT_FILE} &"
	;;
stop)
	echo "GCN Script Starter stop."
	${GCN_SCRIPT_STARTER_SCRIPT_HOME}/killhup.csh org.estar.gcn.GCNDatagramScriptStarter
	;;
*)
	echo "Usage: $0 {start|stop}"
	exit 1
	;;
esac

if [ $? != 0 ]; then
	echo "$status"
	exit 1
fi
exit 0

